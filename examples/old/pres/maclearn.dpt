/* example mac learning */


/* table: dst mac --> port */
Array dst_1 = Array.create<32>(1024, 1);
Array dst_2 = Array.create<32>(1024, 4);
Array egr_1  = Array.create<32>(1024, 2);
Array egr_2  = Array.create<32>(1024, 5);

/* table: src mac --> last seen */
Array src_1 = Array.create<32>(1024, 6);
Array src_2 = Array.create<32>(1024, 7);
Array ts_1  = Array.create<32>(1024, 7);
Array ts_2  = Array.create<32>(1024, 9);

handle pktin (int sport, int src, int dport, int dst) {
	int ts = Sys.time(1);
	int ts_tmp = ts; /* merge var pass bug */
	int out_port = 129; /* broadcast */
	int dst_h1 = Sys.hash<32>(10398247, dst); 
	int dst_h2 = Sys.hash<32>(1295981879, dst);

	/* lookup out port. */
	int dst_found_1 = Array.get<32>(dst_1, dst_h1);	/* cmp */
	if (dst_found_1 == 1) {
		out_port = Array.get<32>(egr_1, dst_h1);
	}
	else {
		int dst_found_2 = Array.get<32>(dst_2, dst_h2); /* cmp */
		if (dst_found_2 == 1) {
			out_port = Array.get<32>(egr_2, dst_h2);
			sport = 1;
		}
	}
	generate pktout (out_port);			

	/* update last seen timestamp. */
	int src_h1 = Sys.hash<32>(10398247, src); 
	int src_h2 = Sys.hash<32>(1295981879, src);
	int src_found_1 = Array.get<32>(src_1, src_h1); /* cmp */
	if (src_found_1 == 1) {
		int junk_1 = Array.set<32>(ts_1, src_h1, ts);
	}
	else {
		int src_found_2 = Array.get<32>(src_2, src_h2); /* cmp */
		if (src_found_2 == 1) {
			int junk_2 = Array.set<32>(ts_2, src_h2, ts_tmp);
		}		
		else {
			/* source mac not found -- install entry. */
			generate install(src, sport, ts, src, 0);
		}
	}
}

handle install (int mac, int port, int ts, int orig_mac, int retry_ct) {
	int mac_cpy = mac; /* reg_alloc bug... */
	int ts_cpy = ts;   /* reg_alloc bug... */
	/* update first stage of mac tables. */	
	int h1 = Sys.hash<32>(10398247, mac_cpy); 

	/* dst tbl[1] */
	int victim_1 = Array.getAndset<32>(dst_1, h1, mac_cpy);
	int victim_1_port = Array.getAndset<32>(egr_1, h1, port);

	/* dst tbl[2] */
	int h2 = Sys.hash<32>(1295981879, victim_1);
	int is_victim_1 = mac_cpy - victim_1;
	int is_victim_2 = 0;
	if (victim_1 == 0 && is_victim_1 == 0) { /* != */
		int victim_2 = Array.getAndset<32>(dst_2, h2, victim_1);
		int victim_2_port = Array.getAndset<32>(egr_2, h2, victim_1_port);
		is_victim_2 = victim_2 - victim_1;
		mac = victim_1;
		port = victim_1_port;
	}	

	/* src tbl[1] */
	int junk_3 = Array.set<32>(src_1, h1, mac_cpy);
	int victim_1_ts = Array.getAndset<32>(ts_1, h1, ts_cpy);

	/* src tbl[2] */	
	if (victim_1 == 0 && is_victim_1 == 0) {
/*		int junk_4 = Array.set<32>(src_2, h2, victim_1);*/
		int victim_2_ts = Array.getAndset<32>(ts_2, h2, victim_1_ts);
		ts = victim_2_ts;
	}

	/*	if (is_victim_2 != 0) {
			generate install (victim_2, victim_2_port, victim_2_ts, orig_mac, retry_ct);
		}
	*/

}


handle packetin (int src, int dst) {
	src = 1;	
}

handle pktout (int dport){
	dport = 1;	
}

/* report the MAC installation failure to a controller. */
/*handle fail (int mac) {
	mac = 1;
}*/