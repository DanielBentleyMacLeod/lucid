Latest observation: 

It seems to always put ts_2 after stash. Why? 

Even if we access ts_stash last in both branches...

Why? 

can we reduce stateful_branches1 to a minimal program that exhibits the behavior?

(eliminate all unnecessary instructions, make an easier to follow toy example)

the error message changes from 9.1 to 9.2...


9.1:
[TOFINO COMPILER] >>> ./switch/pipe/switch.bfa:1564: error: action instruction addr 0 in use elsewhere


9.2:

[TOFINO COMPILER] >>> /media/psf/Home/Desktop/gits/dpt/p4/stateful-branches1.dpt/p4src/./dptgen/dptControl.p4(299): [--Werror=legacy] error: Could not place table Ingress.dptIngressManager.dptEng.ts_2_array_getAndset_4: The table dptIngressManager_dptEng_ts_2_array_getAndset could not fit within a single input crossbar in an MAU stage


- is this the error with too many phvs inputting to the salu? Or another error? 



ts2 salus: 

RegisterAction<bit<32>,bit<32>,bit<32>>(ts_2) salu_ts_2_array_getAndset_55 = {
    void apply(inout bit<32> memCell, out bit<32> retCell) {
        retCell=memCell;
        memCell=insert_ts_victim_1;
        
    }
};
action acn_ts_2_array_getAndset_56() {
    insert_ts_victim_2=salu_ts_2_array_getAndset_55.execute(dptArgs.insert_val1);
}


RegisterAction<bit<32>,bit<32>,bit<32>>(ts_2) salu_ts_2_array_set_45 = {
        void apply(inout bit<32> memCell, out bit<32> retCell) {
            memCell=dptArgs.packetin_src;
            
        }
    };
    action acn_ts_2_array_set_46() {
        packetin_junk2=salu_ts_2_array_set_45.execute(dptArgs.packetin_dst);
    }

if we count input and output, there are 3-4 phvs here...
Would it compile if we changed the program to reduce it to 4 inputs? 


